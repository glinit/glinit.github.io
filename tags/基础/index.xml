<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on glinit</title>
    <link>https://glinit.github.io/tags/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on glinit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Oct 2020 01:37:56 +0800</lastBuildDate>
    
	<atom:link href="https://glinit.github.io/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NLP入门（一）词袋模型及句子相似度</title>
      <link>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%B8%80%E8%AF%8D%E8%A2%8B%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E5%BA%A6/</link>
      <pubDate>Mon, 05 Oct 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%B8%80%E8%AF%8D%E8%A2%8B%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E5%BA%A6/</guid>
      <description>本文将会介绍NLP中常见的词袋模型（Bag of Words）以及如何利用词袋模型来计算句子间的相似度（余弦相似度，cosine similarit</description>
    </item>
    
    <item>
      <title>NLP入门（三）词形还原（Lemmatization)</title>
      <link>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%B8%89%E8%AF%8D%E5%BD%A2%E8%BF%98%E5%8E%9FLemmatization/</link>
      <pubDate>Tue, 08 Sep 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%B8%89%E8%AF%8D%E5%BD%A2%E8%BF%98%E5%8E%9FLemmatization/</guid>
      <description>词形还原（Lemmatization）是文本预处理中的重要部分，与词干提取（stemming）很相似。 简单说来，词形还原就是去掉单词的词缀，</description>
    </item>
    
    <item>
      <title>NLP入门（二）探究TF-IDF的原理</title>
      <link>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%BA%8C%E6%8E%A2%E7%A9%B6TF-IDF%E7%9A%84%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 08 Sep 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%BA%8C%E6%8E%A2%E7%A9%B6TF-IDF%E7%9A%84%E5%8E%9F%E7%90%86/</guid>
      <description>TF-IDF介绍 TF-IDF是NLP中一种常用的统计方法，用以评估一个字词对于一个文件集或一个语料库中的其中一份文件的重要程度，通常用于提取</description>
    </item>
    
    <item>
      <title>NLP入门（五）用深度学习实现命名实体识别（NER）</title>
      <link>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%BA%94%E7%94%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AE%9E%E7%8E%B0%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%ABNER/</link>
      <pubDate>Tue, 08 Sep 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E4%BA%94%E7%94%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AE%9E%E7%8E%B0%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%ABNER/</guid>
      <description>在本文中，我们将会学习到如何使用深度学习工具来自己一步步地实现NER，只要你坚持看完，就一定会很有收获的。 几乎所有的NLP都依赖一个强大的语</description>
    </item>
    
    <item>
      <title>NLP入门（四）命名实体识别（NER）</title>
      <link>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E5%9B%9B%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%ABNER/</link>
      <pubDate>Tue, 08 Sep 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/nlp/NLP%E5%85%A5%E9%97%A8%E5%9B%9B%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%ABNER/</guid>
      <description>本文将会简单介绍自然语言处理（NLP）中的命名实体识别（NER）。 命名实体识别（Named Entity Recognition，简称NER）是信息提取、</description>
    </item>
    
    <item>
      <title>钉钉预警与代码实现</title>
      <link>https://glinit.github.io/post/tools/%E9%92%89%E9%92%89%E9%A2%84%E8%AD%A6%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 08 Sep 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/tools/%E9%92%89%E9%92%89%E9%A2%84%E8%AD%A6%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>​ 本文档对自定义钉钉机器人的流程与注意事项做一个简单介绍，没有知识点，作为一个日常笔记，储备一些小工具。 一、获取自定义机器人webhook 步</description>
    </item>
    
    <item>
      <title>Flink基础2-Data Source介绍</title>
      <link>https://glinit.github.io/post/flink/Flink%E5%9F%BA%E7%A1%802-Data-Source%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 30 Aug 2020 01:37:56 +0800</pubDate>
      
      <guid>https://glinit.github.io/post/flink/Flink%E5%9F%BA%E7%A1%802-Data-Source%E4%BB%8B%E7%BB%8D/</guid>
      <description>前言 Data Sources 是什么呢？就字面意思其实就可以知道：数据来源。 Flink 做为一款流式计算框架，它可用来做批处理，即处理静态的数据集、历史的数据集；也可以用来</description>
    </item>
    
  </channel>
</rss>